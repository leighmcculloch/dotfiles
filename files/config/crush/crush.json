{
  "$schema": "https://charm.land/crush.json",
  "options": {
    "tui": {
      "compact_mode": true,
      "diff_mode": "unified"
    }
  },
  "permissions": {
    "allowed_tools": [
      "view",
      "ls",
      "grep",
      "edit",
      "multiedit",
      "write",
      "fetch",
      "glob",
      "agent",
      "sourcegraph",

      "mcp_perplexity_perplexity_ask",

      "mcp_deepwiki_read_wiki_structure",
      "mcp_deepwiki_read_wiki_contents",
      "mcp_deepwiki_ask_question",

      "mcp_context7_resolve-library-id",
      "mcp_context7_get-library-docs",

      "mcp_github_get_commit",
      "mcp_github_get_discussion",
      "mcp_github_get_discussion_comments",
      "mcp_github_get_file_contents",
      "mcp_github_get_issue",
      "mcp_github_get_issue_comments",
      "mcp_github_get_job_logs",
      "mcp_github_get_latest_release",
      "mcp_github_get_me",
      "mcp_github_get_pull_request",
      "mcp_github_get_pull_request_comments",
      "mcp_github_get_pull_request_diff",
      "mcp_github_get_pull_request_files",
      "mcp_github_get_pull_request_reviews",
      "mcp_github_get_pull_request_status",
      "mcp_github_get_release_by_tag",
      "mcp_github_get_tag",
      "mcp_github_get_workflow_run",
      "mcp_github_get_workflow_run_logs",
      "mcp_github_get_workflow_run_usage",
      "mcp_github_list_branches",
      "mcp_github_list_commits",
      "mcp_github_list_discussion_categories",
      "mcp_github_list_discussions",
      "mcp_github_list_issue_types",
      "mcp_github_list_issues",
      "mcp_github_list_pull_requests",
      "mcp_github_list_releases",
      "mcp_github_list_sub_issues",
      "mcp_github_list_tags",
      "mcp_github_list_workflow_jobs",
      "mcp_github_list_workflow_run_artifacts",
      "mcp_github_list_workflow_runs",
      "mcp_github_list_workflows",
      "mcp_github_search_code",
      "mcp_github_search_issues",
      "mcp_github_search_orgs",
      "mcp_github_search_pull_requests",
      "mcp_github_search_repositories",
      "mcp_github_search_users",

      "mcp_stellar-xdr_types",
      "mcp_stellar-xdr_json_schema",
      "mcp_stellar-xdr_guess",
      "mcp_stellar-xdr_decode",
      "mcp_stellar-xdr_encode"
    ]
  },
  "providers": {
    "lmstudio": {
      "name": "LM Studio",
      "base_url": "http://concrete:1234/v1/",
      "type": "openai",
      "models": [
        { "name": "Qwen 3 30B", "id": "qwen/qwen3-coder-30b", "context_window": 256000, "default_max_tokens": 262144 },
        { "name": "Mistral wizardlm-2-7b", "id": "wizardlm-2-7b", "context_window": 4096, "default_max_tokens": 32768 },
        { "name": "OpenAI gpt-oss-20b", "id": "openai/gpt-oss-20b", "context_window": 4096, "default_max_tokens": 131072 }
      ]
    }
  },
  "lsp": {
    "rust": {
      "command": "rust-analyzer"
    },
    "go": {
      "command": "gopls",
      "env": {
        "GOTOOLCHAIN": "go1.24.5"
      }
    },
    "deno": {
      "command": "deno",
      "args": ["lsp"]
    }
  },
  "mcp": {
    "perplexity": {
      "type": "stdio",
      "command": "deno",
      "args": ["run", "--allow-env=PERPLEXITY_API_KEY", "--allow-net=api.perplexity.ai:443", "npm:server-perplexity-ask"],
      "env": {}
    },
    "deepwiki": {
      "type": "sse",
      "url": "https://mcp.deepwiki.com/sse"
    },
    "github": {
      "type": "stdio",
      "command": "go",
      "args": ["run", "github.com/github/github-mcp-server/cmd/github-mcp-server@latest", "stdio"],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "$(gh auth token)"
      }
    },
    "context7": {
      "type": "http",
      "url": "https://mcp.context7.com/mcp",
      "headers": {
        "CONTEXT7_API_KEY": "$(echo $CONTEXT7_API_KEY)"
      }
    },
    "stellar-xdr": {
      "type": "stdio",
      "command": "deno",
      "args": ["run", "--allow-read", "/Users/leighmcculloch/Code/mcp-stellar-xdr/mcp-stellar-xdr.ts"]
    },
    "openzeppelin-stellar-contracts": {
      "type": "http",
      "url": "https://mcp.openzeppelin.com/contracts/stellar/mcp"
    },
    "playwright": {
      "type": "stdio",
      "command": "deno",
      "args": ["run", "--allow-env", "--allow-sys", "npm:@playwright/mcp"]
    }
  }
}

call plug#begin('~/.vim/plugged')
Plug 'vim-airline/vim-airline'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'scrooloose/nerdtree'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'maralla/completor.vim'
Plug 'vim-scripts/vim-auto-save'
Plug 'tpope/vim-fugitive'
Plug 'mhinz/vim-signify'
"Plug 'mbbill/undotree'
"Plug 'kaicataldo/material.vim'
Plug 'phanviet/vim-monokai-pro'
Plug 'github/copilot.vim'
call plug#end()

runtime vimrc.lock

filetype plugin on

set nomore

set termguicolors

set background=dark
silent! colorscheme monokai_pro

set backspace=indent,eol,start

nmap cn :lnext<cr>
nmap cp :lprevious<cr>

autocmd FileType * setlocal expandtab shiftwidth=2 softtabstop=2 tabstop=2
autocmd FileType go setlocal noexpandtab shiftwidth=4 softtabstop=4 tabstop=4
autocmd FileType make setlocal noexpandtab shiftwidth=4 softtabstop=4 tabstop=4

" Navigating within wrapped lines
noremap <silent> k gk
noremap <silent> j gj
noremap <silent> 0 g0
noremap <silent> $ g$

" CTRL-H/J/K/L in popups
inoremap <expr> <c-j> (pumvisible()?"\<C-n>":"\<c-j>")
inoremap <expr> <c-k> (pumvisible()?"\<C-p>":"\<c-k>")

" CTRL-H/L to iterate through buffers
noremap <c-h> :bprev<CR>
noremap <c-l> :bnext<CR>

" CTRL-J/K to iterate through quickfix list errors
noremap <c-k> :cprev<CR>
noremap <c-j> :cnext<CR>

" CTRL-Q to delete a buffer
noremap <c-q> :bdelete<CR>

" Pasting retaining register
xnoremap <expr> p 'pgv"'.v:register.'y'

" Search word under cursor
nnoremap <leader>gw :Ggrep! "\b<C-R><C-W>\b"<CR>:cw<CR>

" Incremental search
map / <Plug>(incsearch-forward)
map ? <Plug>(incsearch-backward)
set hlsearch
let g:incsearch#auto_nohlsearch = 1
map n  <Plug>(incsearch-nohl-n)
map N  <Plug>(incsearch-nohl-N)
map *  <Plug>(incsearch-nohl-*)
map #  <Plug>(incsearch-nohl-#)
map g* <Plug>(incsearch-nohl-g*)
map g# <Plug>(incsearch-nohl-g#)

set undodir=~/.vim/undodir
set undofile
nmap <Leader>nu :UndotreeToggle<cr>

let g:auto_save = 1
let g:auto_save_in_insert_mode = 0
let g:auto_save_silent = 1
let g:auto_save_no_updatetime = 0

let g:airline_highlighting_cache = 1
let g:airline_extensions = ['tabline']
let g:airline#extensions#tabline#formatter = 'unique_tail_improved'

let g:ctrlp_show_hidden = 1
let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']

nmap <Leader>nt :NERDTreeToggle<cr>
nmap <Leader>nf :NERDTreeFind<cr>
function! NERDTreeFindOrToggle()
  if @% == ""
    NERDTreeToggle
  else
    NERDTreeFind
  endif
endfun
nmap <c-e> :call NERDTreeFindOrToggle()<cr>
au FileType nerdtree nmap <buffer> <c-e> :NERDTreeClose<cr>

let g:completor_filetype_map = {}
let g:completor_filetype_map.rust = {
      \   'ft': 'lsp',
      \   'cmd': 'rust-analyzer',
      \   'options': {
      \     'format': {
      \       'tabSize': 4,
      \       'insertSpaces': v:true
      \     }
      \   }
      \ }

# helper paths
export DOTFILES="$(dirname "$(dirname "$(readlink -f "$0")")")"
export SCRIPTS="$DOTFILES/files/scripts"

# for homebrew
export HOMEBREW_NO_ANALYTICS=1
os="$(uname -s -m)"
brew=
case $os in
  "Darwin x86_64"*) brew=/usr/local/bin/brew ;;
  "Darwin arm64"*) brew=/opt/homebrew/bin/brew ;;
  "Linux"*) brew=/home/linuxbrew/.linuxbrew/bin/brew ;;
  *) ;;
esac
if [ -f $brew ] ; then
  export PATH="$($brew --prefix)/bin:$PATH"
fi
# for other general installs
export PATH="$HOME/.bin:$PATH"
# for deno
export PATH="$PATH:$HOME/.deno/bin"
# for yarn
export PATH="$PATH:$HOME/.yarn/bin"
# for rust
export PATH="$HOME/.cargo/bin:$PATH"
# for dotnet
export DOTNET_ROOT="$HOME/.dotnet"
export PATH="$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools"
# for nvm/node
export NVM_DIR="$HOME/.nvm"
# for docker to use buildkit
export DOCKER_BUILDKIT=1

# sccache for rust
if [ -f $brew ] ; then
  export RUSTC_WRAPPER="$($brew --prefix)/bin/sccache"
fi

# source additional zenvs
if [ -n "$(find $HOME -maxdepth 1 -name '.zenv_*' -print -quit)" ]; then
  for f in "$HOME/.zenv_"*; do
    [ -f $f ] && . $f
  done
fi

# for folders supplied by dotfiles (must be last)
export PATH="$SCRIPTS:$PATH"

# use VSCode as terminal editor
export EDITOR='code-insider -w'

# format of the `time` command in zsh to include memory usage, etc
if [[ `uname` == Darwin ]]; then
    MAX_MEMORY_UNITS=KB
else
    MAX_MEMORY_UNITS=MB
fi
TIMEFMT='%J   %U  user %S system %P cpu %*E total'$'\n'\
'avg shared (code):         %X KB'$'\n'\
'avg unshared (data/stack): %D KB'$'\n'\
'total (sum):               %K KB'$'\n'\
'max memory:                %M '$MAX_MEMORY_UNITS''$'\n'\
'page faults from disk:     %F'$'\n'\
'other page faults:         %R'

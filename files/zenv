# path reset on new shells
[ -z "${ORIGINAL_PATH:-}" ] && export ORIGINAL_PATH=$PATH
export PATH=$ORIGINAL_PATH

# helper paths
export DOTFILES="$HOME/.dotfiles"
export LAZYBIN="$HOME/.lazybin"
export LAZYBIN_LINUX="$HOME/.lazybin-linux"
export SCRIPTS="$HOME/.scripts"
export LOCAL="$HOME/.local"
export LOCAL_BIN="$LOCAL/bin"
mkdir -p "$LOCAL_BIN"
mkdir -p "$LAZYBIN"

# for folders supplied by dotfiles
export PATH="$PATH:$LOCAL_BIN"

# for homebrew
export HOMEBREW_NO_ANALYTICS=1
os="$(uname -s -m)"
brew=
case $os in
  "Darwin x86_64"*) brew=/usr/local/bin/brew ;;
  "Darwin arm64"*) brew=/opt/homebrew/bin/brew ;;
  "Linux"*) brew=/home/linuxbrew/.linuxbrew/bin/brew ;;
  *) ;;
esac
if [ -f $brew ] ; then
  export PATH="$($brew --prefix)/bin:$PATH"
  if [ -z "${PKG_CONFIG_PATH-}" ]; then
    export PKG_CONFIG_PATH=
  fi
  export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$($brew --prefix)/opt/libpq/lib/pkgconfig"
  export PKG_CONFIG_PATH="$PKG_CONFIG_PATH:$($brew --prefix)/opt/openssl@3/lib/pkgconfig"
fi
# for other general installs
export PATH="$HOME/.bin:$PATH"
# for sublime on mac
export PATH="/Applications/Sublime Text.app/Contents/SharedSupport/bin:$PATH"
# for vim
export EDITOR=vim
# for go
export PATH="$PATH:$LOCAL_BIN/go/latest/bin"
export GOPATH="$LOCAL/gopath"
export GOBIN=$LOCAL_BIN
export CGO_ENABLED=1
# for deno
export PATH="$PATH:$HOME/.deno/bin"
# for v
export PATH="$PATH:$LOCAL/v"
# for ruby
if [ -f $LOCAL_BIN/rbenv ]; then
  export RBENV_ROOT=$(dirname $(dirname $(readlink -n $(which rbenv))))
  eval "$(rbenv init -)"
fi
# for python
export PATH="$PATH:$HOME/.local/bin"
# for yarn
export PATH="$PATH:$HOME/.yarn/bin"
# for rust
export PATH="$HOME/.cargo/bin:$PATH"
export CARGO_UNSTABLE_SPARSE_REGISTRY=true
# for java
export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
export PATH=$PATH:$LOCAL/apache-maven-3.6.0/bin
# for dotnet
export DOTNET_ROOT="$HOME/.dotnet"
export PATH="$PATH:$DOTNET_ROOT:$DOTNET_ROOT/tools"
# for nvm/node
export NVM_DIR="$HOME/.nvm"
# for postgres running in docker
export PGHOST=localhost
export PGUSER=${USER:-$(whoami)}
# for vscode
if [ -d $HOME/.vscode-server ]; then
  for vscodeServerPath in $HOME/.vscode-server/bin/*/bin; do
    export PATH="$PATH:$vscodeServerPath"
    break
  done
fi
# for docker to use buildkit
export DOCKER_BUILDKIT=1
# for vmcli
export VMCTLDIR="$HOME/VMs"
# for dart
export PATH="$PATH:$HOME/.pub-cache/bin"
# for multipass (a cask installed by homebrew but to a unique path)
export PATH="/usr/local/bin:$PATH"

# See files/lazybin/rustup for why this is required. It is included here for
# whenever installing rustup in demos.
export RUSTUP_INIT_SKIP_PATH_CHECK=yes

# source additional zenvs
if [ -n "$(find $HOME -maxdepth 1 -name '.zenv_*' -print -quit)" ]; then
  for f in "$HOME/.zenv_"*; do
    [ -f $f ] && . $f
  done
fi

# for folders supplied by dotfiles (must be last)
export PATH="$PATH:$SCRIPTS:$LAZYBIN"
if [ "$(uname)" = "Linux" ]; then
  export PATH="$PATH:$LAZYBIN_LINUX"
fi

# format of the `time` command in zsh to include memory usage, etc
if [[ `uname` == Darwin ]]; then
    MAX_MEMORY_UNITS=KB
else
    MAX_MEMORY_UNITS=MB
fi
TIMEFMT='%J   %U  user %S system %P cpu %*E total'$'\n'\
'avg shared (code):         %X KB'$'\n'\
'avg unshared (data/stack): %D KB'$'\n'\
'total (sum):               %K KB'$'\n'\
'max memory:                %M '$MAX_MEMORY_UNITS''$'\n'\
'page faults from disk:     %F'$'\n'\
'other page faults:         %R'

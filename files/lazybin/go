#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset

me="$(basename "$0")"
installdir="$LOCAL_BIN/go"

# OS / Arch
os="$(uname | tr '[:upper:]' '[:lower:]')"
arch=
{
  rawarch="$(uname -m)"
  case $rawarch in
    x86_64*) arch="amd64" ;;
    arm64*) arch="arm64" ;;
    *)
      echo "Unrecognized architecture: $rawarch"
      exit 1
    ;;
  esac
} 1>&2

# Specify exact versions of Go to install.
versions=(
)

# Add last release of Go to list of versions automatically.
{
  versions+=($(curl -s https://go.dev/dl/\?mode\=json | jq -r '.[0].version'))
} 1>&2

# Install versions as needed.
{
  versions_without_go_prefix=()
  for v in "${versions[@]}"
  do
    v_without_go_prefix=${v#"go"}
    versions_without_go_prefix+=($v_without_go_prefix)
  done

  versions_to_install=()
  for v in "${versions_without_go_prefix[@]}"
  do
    if [ ! -f "$installdir/$v/bin/go" ] ; then
      echo -e "\033[1;32mChecking '$installdir/$v/bin/go' \033[0m"

      versions_to_install+=($v)
    fi
  done

  if ! [ ${#versions_to_install[@]} -eq 0 ] ; then
    echo -e "\033[1;32mInstalling '$me' ($os) ($arch) on first use...\033[0m"

    for v in "${versions_to_install[@]}"
    do
      echo -e "\033[1;93mInstalling 'go$v'...\033[0m"
      mkdir -p "$installdir/$v"
      curl "https://dl.google.com/go/go$v.$os-$arch.tar.gz" | tar xz --strip-components=1 -C "$installdir/$v"
    done

    echo -e "\033[1;93mLinking ${versions[0]} as latest into PATH...\033[0m"
    ln -sfn "${versions_without_go_prefix[0]}" "$installdir/latest"

    if [ "$os" = "linux" ] ; then
      echo -e "\033[1;93mLinking ${versions[0]} as latest into /usr/local/bin as well...\033[0m"
      sudo ln -sfn "$installdir/${versions_without_go_prefix[0]}/bin/go" "/usr/local/bin/go"
    fi

    echo -e "\033[1;32mFinished installing '$me'.\033[0m"
  fi
} 1>&2

"$me" "$@"

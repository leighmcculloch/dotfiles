#!/usr/bin/env bash

set -o errexit
set -o pipefail
set -o nounset

me="$(basename "$0")"
installdir="$LOCAL_BIN/go"

# Specify exact versions of Go to install.
versions=(
  go1.16beta1
)

# Add last two releases of Go to list of versions automatically.
{
  versions+=($(curl -s https://golang.org/dl/\?mode\=json | jq -r '.[].version'))
} 1>&2

# Install versions as needed.
{
  versions_without_go_prefix=()
  for v in "${versions[@]}"
  do
    v_without_go_prefix=${v#"go"}
    versions_without_go_prefix+=($v_without_go_prefix)
  done

  versions_to_install=()
  for v in "${versions_without_go_prefix[@]}"
  do
    if [ ! -f "$installdir/$v/bin/go" ] ; then
      echo -e "\e[1;32mChecking '$installdir/$v/bin/go' \e[0m"

      versions_to_install+=($v)
    fi
  done

  if ! [ ${#versions_to_install[@]} -eq 0 ] ; then
    echo -e "\e[1;32mInstalling '$me' on first use...\e[0m"

    for v in "${versions_to_install[@]}"
    do
      echo -e "\e[1;93mInstalling 'go$v'...\e[0m"
      mkdir -p "$installdir/$v"
      curl "https://dl.google.com/go/go$v.linux-amd64.tar.gz" | tar xz --strip-components=1 -C "$installdir/$v"
    done

    echo -e "\e[1;32mFinished installing '$me'.\e[0m"
  fi
} 1>&2

{
  echo -e "\e[1;93mLinking ${versions[0]} as latest into PATH...\e[0m"
  ln -sfn "${versions_without_go_prefix[0]}" "$installdir/latest"
} 1>&2

"$me" "$@"

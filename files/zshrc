# make c-p/c-n work exactly like up/down arrows
bindkey "^P" up-line-or-search
bindkey "^N" down-line-or-search

# free up the c-q shortcut for use in vim
stty start undef

source ~/.zenv

# oh-my-zsh
export ZSH=$HOME/.oh-my-zsh
ZSH_CUSTOM="$HOME/.dotfiles/files/oh-my-zsh-custom"
ZSH_THEME="minimal"
plugins=(git fzf git-prompt)
DISABLE_AUTO_UPDATE="false"
source $ZSH/oh-my-zsh.sh

function git() {
  command git config core.hooksPath no-hooks
  command git $@
}

# pull pr alias
function gfpr() {
  local prnum="$1"
  local refspec="pull/$prnum/head:pr$prnum"
  if git config remote.upstream.url; then
    git fetch upstream "$refspec"
  else
    git fetch origin "$refspec"
  fi
}

# general aliases
alias l="ls -lah"

# git aliases (in addition to oh-my-zsh git plugin)
alias ga.="git add ."
alias gap="git add -p"
alias gb="git branch --sort=-committerdate"
alias gde="git diff --exit-code"
alias gdcsv="git diff --color-words=\"[^[:space:],]+\""
alias gdcacsv="git diff --cached --color-words=\"[^[:space:],]+\""
alias gscsv="git show --color-words=\"[^[:space:],]+\""
alias gacnf!="ga . && gcn! && gp -f"
alias gs="git stash"
alias gsp="git stash pop"
alias gid="git rev-parse HEAD"

function gbb() {
  local word1="$(perl -e 'srand; rand($.) < 1 && ( $line = $_ ) while <>; print $line' /usr/share/dict/words)"
  local word2="$(perl -e 'srand; rand($.) < 1 && ( $line = $_ ) while <>; print $line' /usr/share/dict/words)"
  local name="$(echo "$word1-$word2" | tr '[:upper:]' '[:lower:]')"
  git checkout -b "$name" $@
}

# github aliases
function gprd() {
  local commit="$(git log -1 --pretty=format:%s)"
  local title="$(gum input --width 50 --prompt 'Title: ' --value "$commit")"
  echo "Title: $title"
  local what="$(gum input --width 80 --prompt 'What: ' --value "$title")"
  echo "What: $what"
  echo "Why:"
  local why="$(gum write --width 80 --char-limit 99999 --prompt '| ')"
  echo "$why"
  echo "Reviewer: "
  local reviewer="$(gum choose --no-limit \
    $(gh api '/repos/{owner}/{repo}/contributors' --jq '.[].login')
  )"
  gh pr create --draft --title "$title" --body "### What
$what

### Why
$why" --reviewer "$(IFS=,; echo -n "${reviewer[*]}")" $@
}

# setup nvm/node
if [ -s "$NVM_DIR/nvm.sh" ]; then
  source "$NVM_DIR/nvm.sh"
fi

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"

# zsh opts
unsetopt HIST_VERIFY

# print exit code once after last command output
function track-exec-command() {
  zsh_exec_command=1
}
function print-exit-code() {
  local -i code=$?
  (( code == 0 )) && return
  (( zsh_exec_command != 1 )) && return
  unset zsh_exec_command
  print -rC1 -- ''${(%):-"%F{160}âœ˜ exit status $code%f"}''
}
autoload -Uz add-zsh-hook
add-zsh-hook preexec track-exec-command
add-zsh-hook precmd print-exit-code

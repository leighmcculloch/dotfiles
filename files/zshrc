# make c-p/c-n work exactly like up/down arrows
bindkey "^P" up-line-or-search
bindkey "^N" down-line-or-search

# free up the c-q shortcut for use in vim
stty start undef

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# oh-my-zsh
export ZSH=$HOME/.oh-my-zsh
ZSH_THEME="powerlevel10k/powerlevel10k"
plugins=(git docker tig golang vscode nvm)
DISABLE_AUTO_UPDATE="false"
source $ZSH/oh-my-zsh.sh

# aliases
alias renv="eval \$(tmux show-env -s | grep '^SSH_')"

# alias for loading env files
function e() {
  local env_file="$1"
  shift
  env $(cat "$env_file" | xargs) $@
}

# pull pr alias
function gfpr() {
  local prnum="$1"
  local refspec="pull/$prnum/head:pr$prnum"
  if git config remote.upstream.url; then
    git fetch upstream "$refspec"
  else
    git fetch origin "$refspec"
  fi
}

# git aliases
alias ga.="git add ."
alias gde="git diff --exit-code"
alias gdcsv="git diff --color-words=\"[^[:space:],]+\""
alias gdcacsv="git diff --cached --color-words=\"[^[:space:],]+\""
alias gscsv="git show --color-words=\"[^[:space:],]+\""

# go aliases
alias gota="go test ./..."
alias gots="gotestsum"

# go aliases
if [ -d $LOCAL_BIN/go ]; then
  for dir in $LOCAL_BIN/go/*;
  do
    local v=${dir##*/}
    alias "go$v"="$LOCAL_BIN/go/$v/bin/go"
  done
fi

# load fzf
if [[ -a $LOCAL/fzf/shell/key-bindings.zsh ]]; then
  source $LOCAL/fzf/shell/key-bindings.zsh
fi

# setup homebrew
if [[ -d /home/linuxbrew/.linuxbrew/bin/brew ]]; then
  eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
fi

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"

# zsh opts
unsetopt HIST_VERIFY

# print exit code once after last command output
function track-exec-command() {
  zsh_exec_command=1
}
function print-exit-code() {
  local -i code=$?
  (( code == 0 )) && return
  (( zsh_exec_command != 1 )) && return
  unset zsh_exec_command
  print -rC1 -- ''${(%):-"%F{160}âœ˜ exit status $code%f"}''
}
autoload -Uz add-zsh-hook
add-zsh-hook preexec track-exec-command
add-zsh-hook precmd print-exit-code

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
